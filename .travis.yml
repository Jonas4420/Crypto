language: cpp

os: linux
dist: trusty
sudo: required

notifications:
        email: false

matrix:
        include:
                ##########################################################################
                # Clang on OSX
                ##########################################################################
                - os: osx
                  osx_image: xcode8.3
                  compiler: clang
                  env: BUILD_TYPE=Release

                - os: osx
                  osx_image: xcode8.3
                  compiler: clang
                  env: BUILD_TYPE=Debug

                - os: osx
                  osx_image: xcode8.3
                  compiler: clang
                  env: BUILD_TYPE=ASan

                ##########################################################################
                # Clang on Linux
                ##########################################################################
                - compiler: clang
                  env: BUILD_TYPE=Release
                  addons: &valgrind
                        apt:
                                sources:
                                        - ubuntu-toolchain-r-test
                                packages:
                                        - valgrind

                - compiler: clang
                  env: BUILD_TYPE=Debug
                  addons: *valgrind

                - compiler: clang
                  env: BUILD_TYPE=ASan

                ##########################################################################
                # GCC on Linux 
                ##########################################################################

                - compiler: gcc
                  env: BUILD_TYPE=Release
                  addons: *valgrind

                - compiler: gcc
                  env: BUILD_TYPE=Debug
                  addons: *valgrind

                - compiler: gcc
                  env: BUILD_TYPE=ASan

                - compiler: gcc
                  env: BUILD_TYPE=Coverage
                  addons: &coverage
                        apt:
                                sources:
                                        - ubuntu-toolchain-r-test
                                packages:
                                        - lcov

before_script:
        - cd "${TRAVIS_BUILD_DIR}"
        - mkdir build && cd build
        - cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ..

script:
        - make -j 2
        - export CRYPTO_TEST_VECT_DIR="${TRAVIS_BUILD_DIR}/tests/test_vectors/"
        - ctest -V -j 2
        - |
          if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
                if [[ "${BUILD_TYPE}" == "Release" || "${BUILD_TYPE}" == "Debug" ]]; then
                        CRYPTO_TEST_IS_FAST=1 ctest -V -j 2 -T memcheck
                fi
          fi

after_success:
        - |
          if [[ "${BUILD_TYPE}" == "Coverage" ]]; then
                cd ${TRAVIS_BUILD_DIR}
                lcov --directory . --capture                 --output-file coverage.info
                lcov --remove coverage.info '/usr/*'         --output-file coverage.info
                lcov --remove coverage.info '*googletest*'   --output-file coverage.info
                lcov --list coverage.info
                bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
          fi
